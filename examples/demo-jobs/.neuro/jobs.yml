kind: job
title: Example config

defaults:
  # preset: gpu-small
  preset: cpu-small

volumes:
  data:
    uri: storage:${{ flow.id }}/data
    mount: /project/data
    local: data
    read_only: True
  code:
    uri: storage:${{ flow.id }}/modules
    mount: /project/modules
    local: modules
  config:
    uri: storage:${{ flow.id }}/config
    mount: /project/config
    local: config
  notebooks:
    uri: storage:${{ flow.id }}/notebooks
    mount: /project/notebooks
    local: notebooks
  results:
    uri: storage:${{ flow.id }}/results
    mount: /project/results
    local: results
  project:
    uri: storage:${{ flow.id }}
    mount: /project
    read_only: True

images:
  img:
    uri: image:${{ flow.id}}:v1.0
    dockerfile: ${{ flow.workspace }}/Dockerfile
    context: ${{ flow.workspace }}

jobs:

  test:
    image: ubuntu
    cmd: echo test

  bash:
    image: ubuntu

  py:
    image: python:latest
    python: |
        import sys
        print("Hello!!!")
        sys.exit(1)

  develop:
    image: ${{ images.img.uri }}
    # note, since the base image v1.6 redirects the output via '2>&1 | tee'
    # the image cannot run bash in interactive mode.
    cmd: bash
    env:
      EXPOSE_SSH: "yes"
      PYTHONPATH: ${{ volumes.code.mount }}

  train:
    image: ${{ images.img.uri }}
    detach: True
    life_span: 10d
    volumes:
      - ${{ volumes.data.ro_volume }}
      - ${{ volumes.code.rw_volume }}
      - ${{ volumes.config.ro_volume }}
      - ${{ volumes.results.rw_volume }}
    env:
      EXPOSE_SSH: "yes"
      PYTHONPATH: ${{ volumes.code.mount }}
    bash: |
        cd ${{ volumes.project.mount }}
        python ${{ volumes.code.mount }}/train.py --data ${{ volumes.data.mount }}

  jupyter:
    http_port: 8888
    browse: True
    detach: True
    life_span: 10d
    volumes:
      - ${{ volumes.data.ro_volume }}
      - ${{ volumes.code.rw_volume }}
      - ${{ volumes.config.ro_volume }}
      - ${{ volumes.notebooks.rw_volume }}
      - ${{ volumes.results.rw_volume }}
    env:
      PYTHONPATH: ${{ volumes.code.mount }}
    image: ${{ images.img.uri }}
    cmd: >-
      jupyter notebook
        --no-browser
        --ip=0.0.0.0
        --allow-root
        --NotebookApp.token=
        --notebook-dir=${{ volumes.notebooks.mount }}

  tensorboard:
    preset: cpu-small
    http_port: 6006
    browse: True
    detach: True
    volumes:
      - ${{ volumes.results.ro_volume }}
    image: tensorflow/tensorflow:latest
    cmd: tensorboard --host=0.0.0.0 --logdir=${{ volumes.results.mount }}

  filebrowser:
    preset: cpu-small
    http_port: 80
    browse: True
    detach: True
    volumes:
      - ${{ volumes.project.uri }}:/srv:rw
    image: filebrowser/filebrowser:latest
    cmd: --noauth

