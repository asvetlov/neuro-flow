name: CI

on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:
    branches: [master]
  schedule:
  - cron: 0 6 * * *       # Daily 6AM UTC build


jobs:

  deploy:
    name: Deploy on PyPI
    runs-on: ubuntu-latest
    # Run only on pushing a tag
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Sanity check for tag and version
      run: |
        if [ "refs/tags/v${{ needs.lint.outputs.version }}" != "${{ github.ref }}" ]
        then
          echo "Tag ${{ github.ref }} mismatches with ${{ needs.lint.outputs.version }}"
          exit 1
        else
          echo "Tag matches version ${{ needs.lint.outputs.version }}"
        fi
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements/ci.txt
    - name: Install twine
      run: |
        python -m pip install twine
    - name: Make dists
      run: |
        python setup.py sdist bdist_wheel
    - name: PyPI upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*
    - name: Wait for availability on PyPI
      run: |
        tools/wait_pypi.sh ${{ needs.lint.outputs.version }}

  image:
    name: Build and Push Docker Image
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build
      run: |
        docker build -t neuromation/neuro-flow:${{ needs.lint.outputs.version }} \
            --build-arg NEURO_FLOW_VERSION=${{ needs.lint.outputs.version }} \
            .
    - name: Push
      run: |
        docker push neuromation/neuro-flow:${{ needs.lint.outputs.version }}
